------------------------------------------------------------
			00README

  $Id$
------------------------------------------------------------

[WHAT'S THIS]

This script finds .java files under the specified directory
and builds a directory hierarchy based on a package
statement which are in the file, then creates symbolic link
to the file into the directories.


[SYNOPSIS]

  aspack.rb [-n] [-c] src_dir dst_dir


[DESCRIPTION]

You must specify the most top directory which contains
target java files to src_dir.  The program tries to traverse
the directory recursively and analyse an package sentence,
then creates directory layout under the dst_dir.  If the
.java file has no package sentence, the file will be under
the dst_dir.

If there is no dst_dir, the program tries to create it
automatically.

Please be carefully if there is already an file which has
same file name, this file will be replaced new one.

The following options are available:

  -n  Just print out commands which will be executed, but
      do not actually execute them.
  -c  Try to copy files instead of creating symbolic link.


[EXAMPLE]

If there is such a directory layout,

- x/y/z/foo.java
  - package a.b;
- x/yy/z/bar.java
  - package a.c;
- x/yy/zz/baz.java
  - (no package sentence)

if you run below command, 

  % ./aspack.rb x dst

the, you'll get the following results:

  dst/baz.java
      a/b/foo.java
        c/bar.java

[USE CASE]

This program is mainly created for supporting to debug Java
standard libraries under the debugger with their source
codes.

In the default, Android SDK does not allow us to debug
standard libraries(android.jar) with their source codes.
Also, ADT prohibits to attach source code to android.jar.

But, if you deploy java files under 'sources' directory,
which is in the platform/*/, with keeping the same layout to
android.jar, the debugger can use them as source code for
the libraries.  This program is created for supporting to do
this task.

Try to use, such like as:

  % export SDK=<The directory where you extracted Android-SDK>/platforms/android-1.5(or 1.1)
  % export SRCDIR=<The directory you did 'repo sync' with Android-source>
  % aspack.rb ${SRCDIR} ${SDK}/sources


[NOTICE]

* This program is just checked under Mac OS X 10.5 + ruby 1.8.6.
* symbolic links will be created as absolute path.


[THANKS]

* Thank you, Erick Blirke, for the information about Android
  source directory:

    <URL:http://stuffthathappens.com/blog/2008/11/01/browsing-android-source-in-eclipse/>

* Thank you, Michael Forster, for the main idea for this script:

    <URL:http://blog.michael-forster.de/2008/12/view-android-source-code-in-eclipse.html>


[CONTACT]

  E-mail: n-miyo@tempus.org (MIYOKAWA, Nobuyoshi)
  Website:
    <URL:http://blogger.tempus.org/>
    <URL:http://www.tempus.org/>


[LICENSE]

Copyright (c) 2009, MIYOKAWA, Nobuyoshi
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  1. Redistributions of source code must retain the above copyright
     notice, this list of conditions and the following disclaimer.
  2. Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in the
     documentation and/or other materials provided with the distribution.
  3. Neither the name of the authors nor the names of its
     contributors may be used to endorse or promote products derived
     from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE AUTHORS ''AS IS'' AND ANY EXPRESS
OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

; EOF
